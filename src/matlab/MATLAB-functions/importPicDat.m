function TBL = importPicDat(filename, startRow, endRow)
%IMPORTPICDAT Import numeric data from a text file as a table.
%   TBL = IMPORTPICDAT(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   TBL = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   TBL = IMPORTPICDAT('CFIDS2136-20180620-174307Z-DataLog_User.dat', 2, 4126);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/07/19 13:09:32

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: datetimes (%{yyyy-MM-dd}D)
%	column2: text (%q)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: double (%f)
%	column54: double (%f)
%   column55: double (%f)
%	column56: double (%f)
%   column57: double (%f)
%	column58: double (%f)
%   column59: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%{yyyy-MM-dd}D%q%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
TBL = table(dataArray{1:end-1}, 'VariableNames', {'DATE','TIME','FRAC_DAYS_SINCE_JAN1','FRAC_HRS_SINCE_JAN1','EPOCH_TIME','ALARM_STATUS','INST_STATUS','CavityPressure','CavityTemp','WarmBoxTemp','EtalonTemp','DasTemp','MPVPosition','solenoid_valves','OutletValve','MeasurementMode','species','HP_12CH4','HP_12CH4_dry','HP_13CH4','HR_13CH4','Delta_iCH4_Raw','HP_Delta_iCH4_Raw','HP_Delta_iCH4_30s','HP_Delta_iCH4_2min','HP_Delta_iCH4_5min','HR_12CH4','HR_12CH4_dry','HR_Delta_iCH4_Raw','HR_Delta_iCH4_30s','HR_Delta_iCH4_2min','HR_Delta_iCH4_5min','ChemDetect','H2O','CO2','CO2_dry','CO1','Delta_Raw_iCO2','Delta_30s_iCO2','Delta_2min_iCO2','Delta_5min_iCO2','peak87_baseave_spec','peak88_baseave','peakheight_5','peak0_spec','ch4_splinemax','peak30_spec','peak_30','SSIMPressure','PPF_res','PPF_base_offset','PPF_slope_offset','PPF_shift','PPF_CH4_conc','PPF_H2O_conc','PPF_C2H6_conc','PPF_C2H4_conc','PPF_NH3_conc','PPF_H2S_conc'});

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% PRCN.DATE=datenum(PRCN.DATE);

